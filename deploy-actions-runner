#!/bin/sh

namespace=default

for i in "$@"; do
    case $i in
        --kubernetes) kubernetes=1; shift ;;
        --local) kubernetes=0; shift ;;
        -o) shift; owner="$1"; shift ;;
        -t) shift; github_token="$1"; shift ;;
        -n) shift; namespace="$1"; shift;;
        -r) shift; repository="$1"; shift ;;
        -p) shift; github_packages_token="$1"; shift ;;
    esac
done

if [ -z "$owner" -o -z "$github_token" -o -z "$kubernetes" ]; then
cat << EOF
usage: deploy-actions-runner -o owner -t token [-r repo]
       [--local] [--kubernetes] [-n namespace] [ -p packages token ]
EOF
    exit 0
fi

deploy_kubernetes () {
cat << EOF > yaml/github-settings.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: actions-runner
spec:
  template:
    spec:
      containers:
        - name: runner
          env:
            - name: GITHUB_OWNER
              value: $owner
            - name: GITHUB_REPOSITORY
              value: $repository
EOF

    if [ ! -z github_packages_token ]; then
        kubectl create secret docker-registry github-packages \
            --dry-run \
            --docker-server=docker.pkg.github.com \
            --docker-username=$owner \
            --docker-password=$github_packages_token \
            -o yaml > yaml/github-packages-secret.yaml
    fi

    if [ ! -z $repository ]; then
        owner=$(echo $repository | tr / -)
    fi

    sed "s,@namespace@,$namespace,g
         s,@owner@,$owner,g
         s,@github_token@,$github_token,g
         " yaml/kustomization.in > yaml/kustomization.yaml

    kubectl kustomize yaml
}

deploy_local () {
    vol=/tmp/action-runner.$$
    mkdir -p $vol/runner

    docker run --rm --name action-runner \
        -e GITHUB_OWNER=$owner \
        -e GITHUB_REPOSITORY=$repository \
        -e GITHUB_TOKEN=$github_token \
        -e LABELS=local \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $vol/runner:/home/runner \
        juselius/actions-runner:latest
}

if [ "$kubernetes" = "1" ]; then
    deploy_kubernets
else
    deploy_local
fi
